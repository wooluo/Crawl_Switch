name: Nintendo Switch 新闻爬虫

on:
  schedule:
    - cron: '0 9 * * *'   # 每天早上 9 点执行（UTC 时间）
  workflow_dispatch:      # 支持手动触发

jobs:
  crawl-and-update:
    runs-on: ubuntu-latest  # 自动兼容 22.04 或 24.04

    steps:
      # 1. 检出代码
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整 git 历史（提交时需要）

      # 2. 设置 Python 环境
      - name: 设置 Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. 安装依赖
      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install playwright

      # 4. 设置 Playwright（自动处理系统依赖）
      - name: 安装浏览器及依赖
        run: |
          python -m playwright install chromium
          python -m playwright install-deps

      # 5. 运行爬虫
      - name: 执行爬虫脚本
        run: python crawler.py

      # 6. 调试输出
      - name: 显示生成内容（调试）
        run: |
          echo "=== 最新新闻 ==="
          cat switch_news.md
          echo "\n=== JSON 数据 ==="
          jq . results.json

      # 7. 提交变更
      - name: 自动提交更新
        run: |
          # 配置 git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 检查是否有变更
          git add results.json switch_news.md
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "自动更新: $(date +'%Y-%m-%d %H:%M')"
            git push https://x-access-token:${{ secrets.REPO_PAT }}@github.com/${{ github.repository }}.git HEAD:main
            echo "变更已提交"
          else
            echo "无新内容需要更新"
          fi
